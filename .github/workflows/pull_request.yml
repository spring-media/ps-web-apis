name: Checks
on:
  pull_request:
  # we're doing the filtering for branches and actions in each step,
  # this one here works not as expected and could be misleading
#    branches:
#      - migrating-to-yaml-syntax
#      - master
#    action:
#      - opened
#      - edited
#      - synchronize
jobs:
  checks:
    name: Formatting checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/checkout@master

      - name: Install npm
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/npm@master
        with:
          args: install

      - name: Npm check
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/npm@master
        with:
          args: run check --if-present

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/checkout@master

      - name: Checkout master
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/checkout@master
        with:
          ref: master

      - name: Check merge
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        run: |
          git config --global user.name "Spring Media CD"
          git config --global user.email "ps-support-og@moveoffice.com"
          git merge ${{ github.event.pull_request.head.sha }} -m"prchecker" --stat

      - name: Install npm
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/npm@master
        with:
          args: install

      - name: Test npm
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/npm@master
        with:
          args: run test

      - name: Build npm
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/npm@master
        with:
          args: run build

      - name: Upload artifacts
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/upload-artifact@master
        with:
          name: ${{ github.event.repository.name }}-${{ github.event.pull_request.head.sha }}
          path: build

  infra:
    name: Terragrunt plan
    runs-on: ubuntu-latest
    needs:
      - build
      - checks
    steps:
      - name: Checkout branch
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/checkout@master

      - name: Download artifact
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: actions/download-artifact@master
        with:
          name: ${{ github.event.repository.name }}-${{ github.event.pull_request.head.sha }}
          path: build

      - name: Terragrunt plan
        if: github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize'
        uses: docker://asideas/terragrunt:0.18.3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GH_SSH_PRIVATE_KEY: ${{ secrets.GH_SSH_PRIVATE_KEY }}
        with:
          args: -c "sh ./pipelines/terragrunt.sh plan-all"
